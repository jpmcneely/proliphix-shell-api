#!/bin/bash

# Version 1.0 - 2013-11-30
# Copyright (C) 2013 - J.P. McNeely
#
# GPL 2.0 License - See LICENSE for redistribution requirements.

# Source the configuration
. ./tstatconf.inc

# Source the database configuration
. ./tstatdb.inc

# Source the API Implementation
. ./tstatapi.inc

if [ ! ${1} ]; then
  echo "usage: $0 COMMAND [OPTIONS]"
  echo " "
  echo "Available Commands:"
  echo "General:"
  echo "    listclass       : List details for schedule class"
  echo "    listdefaults    : List schedule default classes"
  echo "    listspecial     : List special schedule days"
  echo "    showperiodstart : Show schedule period start time"
  echo "    showperiodheat  : Show heat setback for schedule period"
  echo "    showperiodcool  : Show cool setback for schedule period"
  echo "    showdefaultclass: Show default schedule class for day"
  echo "    showspecial     : Show special day schedule"
  echo "Settings:"
  echo "    setperiodstart  : Set schedule period start time"
  echo "    setperiodheat   : Set schedule period heat setback temperature"
  echo "    setperiodcool   : Set schedule period cool setback temperature"
  echo "    setdefaultclass : Set default schedule class for day"
  echo " "
  exit 1
fi

CMD=${1}

# Show Period Start
if [ $CMD = "showperiodstart" ]; then
  if [ ! ${3} ]; then
    echo "usage: $0 showperiodstart In|Out|Away Morning|Day|Evening|Night"
    exit 1
  fi
  CLASS=$2
  PERIOD=$3
  PERIODSTART=`readThermPeriodStartHHMM $CLASS $PERIOD`
  echo "$CLASS:$PERIOD:$PERIODSTART"
fi

# Show Period Heat Setback
if [ $CMD = "showperiodheat" ]; then
  if [ ! ${3} ]; then
    echo "usage: $0 showperiodheat In|Out|Away Morning|Day|Evening|Night"
    exit 1
  fi
  CLASS=$2
  PERIOD=$3
  PERIODHEAT=`readThermPeriodSetbackHeat $CLASS $PERIOD`
  echo "$CLASS:$PERIOD:$PERIODHEAT"
fi

# Show Period Cool Setback
if [ $CMD = "showperiodcool" ]; then
  if [ ! ${3} ]; then
    echo "usage: $0 showperiodcool In|Out|Away Morning|Day|Evening|Night"
    exit 1
  fi
  CLASS=$2
  PERIOD=$3
  PERIODCOOL=`readThermPeriodSetbackCool $CLASS $PERIOD`
  echo "$CLASS:$PERIOD:$PERIODCOOL"
fi

# List Schedule Class
if [ $CMD = "listclass" ]; then
  if [ ! ${2} ]; then
    echo "usage: $0 listclass In|Out|Away"
    exit 1
  fi
  CLASS=$2
  echo ""
  echo "Schedule Class: $CLASS"
  echo ""
  echo " Period    Start    Heat    Cool"
  echo "================================="
  for PERIOD in Morning Day Evening Night
  do
    PERSTART=`readThermPeriodStartHHMM $CLASS $PERIOD`
    PERHEAT=`readThermPeriodSetbackHeat $CLASS $PERIOD`
    PERCOOL=`readThermPeriodSetbackCool $CLASS $PERIOD`
    printf " %-8s  %-5s  %6s  %6s\n" $PERIOD $PERSTART $PERHEAT $PERCOOL
  done
  echo "================================="
  echo ""
fi

# Show Default Schedule Class
if [ $CMD = "showdefaultclass" ]; then
  if [ ! ${2} ]; then
    echo "usage: $0 showdefaultclass Monday|Tuesday|Wednesday|Thursday|Friday|Saturday"
    exit 1
  fi
  DAYNAME=$2
  DFLTCLASS=`readThermDefaultClassId $DAYNAME`
  echo "$DAYNAME:$DFLTCLASS"
fi

# List Default Schedule Classes
if [ $CMD = "listdefaults" ]; then
  echo ""
  echo "Default Schedule Class"
  echo ""
  echo "======================"
  for DAYNAME in Sunday Monday Tuesday Wednesday Thursday Friday Saturday
  do
    CLASS=`readThermDefaultClassId $DAYNAME`
    printf "  %-10s : %-5s\n" $DAYNAME $CLASS
  done
  echo "======================"
  echo ""
fi

# Show Special Day Schedule
if [ $CMD = "showspecial" ]; then
  if [ ! ${2} ]; then
    echo "usage: $0 showspecial SPECIAL_DAY_NUMBER (1-20)"
    exit 1
  fi
  SDIDX=$2
  if [ $SDIDX -lt 1 -o $SDIDX -gt 20 ]; then
    echo "ERROR: Invalid Special Day Number"
    exit 1
  fi
  SDSTARTDAY=`readThermScheduleSpecialDay $SDIDX`
  if [ $SDSTARTDAY -gt 0 ]; then
    SDMONTH=`readThermScheduleSpecialMonth $SDIDX`
    SDYEAR=`readThermScheduleSpecialYear $SDIDX`
    SDDUR=`readThermScheduleSpecialDuration $SDIDX`
    SDCLASS=`readThermScheduleSpecialClassId $SDIDX`
    echo "${SDIDX}:$SDSTARTDAY:$SDMONTH:$SDYEAR:$SDDUR:$SDCLASS"
  else
    echo "$SDIDX:Not Defined"
  fi
fi

# List Special Day Schedules
if [ $CMD = "listspecial" ]; then
  SDIDX=1
  echo ""
  echo "Special Schedule Days"
  echo ""
  echo " Idx  Day  Month         Year   Dur     Class"
  echo "=============================================="
  while [ $SDIDX -le 20 ]
  do
    SDSTARTDAY=`readThermScheduleSpecialDay $SDIDX`
    if [ $SDSTARTDAY -gt 0 ]; then
      SDMONTH=`readThermScheduleSpecialMonth $SDIDX`
      SDYEAR=`readThermScheduleSpecialYear $SDIDX`
      SDDUR=`readThermScheduleSpecialDuration $SDIDX`
      SDCLASS=`readThermScheduleSpecialClassId $SDIDX`
      printf "  %-3s  %-2s  %-12s  %-6s  %-3s    %-5s\n" ${SDIDX} $SDSTARTDAY $SDMONTH $SDYEAR $SDDUR $SDCLASS
    fi
    SDIDX=$[$SDIDX + 1]
  done
  echo "=============================================="
  echo ""
fi

# Set Period Start
if [ $CMD = "setperiodstart" ]; then
  if [ ! $4 ]; then
    echo "usage: $0 setperiodstart In|Out|Away Morning|Day|Evening|Night START_TIME"
    exit 1
  fi
  CLASS=$2
  PERIOD=$3
  STARTTIME=$4
  writeThermPeriodStartHHMM $CLASS $PERIOD $STARTTIME
  if [ $? -ne 1 ]; then
    echo "Start Time for Class: $CLASS Period: $PERIOD set to $STARTTIME"
  else
    echo "ERROR: Failed to set period start time"
  fi
fi

# Set Period Heat Setback
if [ $CMD = "setperiodheat" ]; then
  if [ ! $4 ]; then
    echo "usage: $0 setperiodheat  In|Out|Away Morning|Day|Evening|Night TEMPERATURE"
    exit 1
  fi
  CLASS=$2
  PERIOD=$3
  SETHEAT=$4
  writeThermPeriodSetbackHeat $CLASS $PERIOD $SETHEAT
  if [ $? -ne 1 ]; then
    echo "Heat Setback for Class: $CLASS Period: $PERIOD set to $SETHEAT"
  else
    echo "ERROR: Failed to set period heat setback"
  fi
fi

# Set Period Cool Setback
if [ $CMD = "setperiodcool" ]; then
  if [ ! $4 ]; then
    echo "usage: $0 setperiodcool  In|Out|Away Morning|Day|Evening|Night TEMPERATURE"
    exit 1
  fi
  CLASS=$2
  PERIOD=$3
  SETCOOL=$4
  writeThermPeriodSetbackCool $CLASS $PERIOD $SETCOOL
  if [ $? -ne 1 ]; then
    echo "Cool Setback for Class: $CLASS Period: $PERIOD set to $SETCOOL"
  else
    echo "ERROR: Failed to set period cool setback"
  fi
fi

# Set Default Schedule Class
if [ $CMD = "setdefaultclass" ]; then
  if [ ! $3 ]; then
    echo "usage: $0 setdefaultclass Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday In|Out|Away"
    exit 1
  fi
  DAYNAME=$2
  CLASS=$3
  writeThermDefaultClassId $DAYNAME $CLASS
  if [ $? -ne 1 ]; then
    echo "Default Schedule Class for $DAYNAME set to $CLASS"
  else
    "ERROR: Failed to set default schedule class"
  fi
fi


# EOF
